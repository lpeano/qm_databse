!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
LOG_DEBUG1	./log/flog.c	11;"	d	file:
LOG_DEBUG1	./log/flog.h	6;"	d
LOG_DEBUG2	./log/flog.c	12;"	d	file:
LOG_DEBUG2	./log/flog.h	7;"	d
LOG_INFO	./log/flog.c	9;"	d	file:
LOG_INFO	./log/flog.h	4;"	d
LOG_LOGVERBOSE	./log/flog.c	10;"	d	file:
LOG_LOGVERBOSE	./log/flog.h	5;"	d
SHM_LINKED_LIST	./shmeme_block/shmem_linked_list.h	3;"	d
SHM__BLOCK__	./shmeme_block/shmem_blk.h	2;"	d
_LOGING__	./log/flog.c	2;"	d	file:
_LOG_LEVELS	./log/flog.c	7;"	d	file:
_LOG_LEVELS	./log/flog.h	2;"	d
blk_id	./shmeme_block/shmem_blk.h	/^	unsigned long 		blk_id;   \/* Unique blocl identifier *\/$/;"	m	struct:block
blk_id	./shmeme_block/shmem_blk.h	?^	unsigned long 		blk_id;   /* Unique blocl identifier */$?;"	m	struct:block
block	./shmeme_block/shmem_blk.h	/^typedef struct block {$/;"	s
block	./shmeme_block/shmem_blk.h	?^typedef struct block {$?;"	s
block	./shmeme_block/shmem_linked_list.h	/^	t_block 		block;	 \/* Data Block     	       *\/$/;"	m	struct:linked_list
block	./shmeme_block/shmem_linked_list.h	?^	t_block 		block;	 /* Data Block     	       */$?;"	m	struct:linked_list
buffer	./shmeme_block/shmem_blk.h	/^	void *			buffer[]; \/* Data Buffer *\/$/;"	m	struct:block
buffer	./shmeme_block/shmem_blk.h	?^	void *			buffer[]; /* Data Buffer */$?;"	m	struct:block
decoded_level	./log/flog.c	/^static char *decoded_level[]={$/;"	v	file:
decoded_level	./log/flog.c	?^static char *decoded_level[]={$?;"	v	file:
fd_log	./log/flog.c	/^int fd_log = -1 ;$/;"	v
fd_log	./log/flog.c	?^int fd_log = -1 ;$?;"	v
flog	./log/flog.c	/^void flog ( int level, char *message) {$/;"	f
flog	./log/flog.c	?^void flog ( int level, char *message) {$?;"	f
init_blk	./shmeme_block/shmem_blk.c	/^int init_blk( t_block *blk )$/;"	f
init_blk	./shmeme_block/shmem_blk.c	?^int init_blk( t_block *blk )$?;"	f
init_log_level	./log/flog.c	/^int init_log_level( int level ) {$/;"	f
init_log_level	./log/flog.c	?^int init_log_level( int level ) {$?;"	f
linked_list	./shmeme_block/shmem_linked_list.h	/^struct linked_list {$/;"	s
linked_list	./shmeme_block/shmem_linked_list.h	?^struct linked_list {$?;"	s
log_level	./log/flog.c	/^int log_level = LOG_INFO;$/;"	v
log_level	./log/flog.c	?^int log_level = LOG_INFO;$?;"	v
main	./test/testlogger.c	/^int main(int ergc, char *argv[]) {$/;"	f
main	./test/testlogger.c	?^int main(int ergc, char *argv[]) {$?;"	f
stream_log	./log/flog.c	/^FILE *stream_log=NULL;$/;"	v
stream_log	./log/flog.c	?^FILE *stream_log=NULL;$?;"	v
t_block	./shmeme_block/shmem_blk.h	/^} t_block;$/;"	t	typeref:struct:block
t_block	./shmeme_block/shmem_blk.h	?^} t_block;$?;"	t	typeref:struct:block
t_next	./shmeme_block/shmem_linked_list.h	/^	t_block  		*t_next; \/* Next datablock *\/$/;"	m	struct:linked_list
t_next	./shmeme_block/shmem_linked_list.h	?^	t_block  		*t_next; /* Next datablock */$?;"	m	struct:linked_list
t_prev	./shmeme_block/shmem_linked_list.h	/^	t_block 		*t_prev; \/* Previe Block 	       *\/$/;"	m	struct:linked_list
t_prev	./shmeme_block/shmem_linked_list.h	?^	t_block 		*t_prev; /* Previe Block 	       */$?;"	m	struct:linked_list
